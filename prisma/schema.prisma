generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Measurements {
  id          String    @id @default(uuid())
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  measuredAt  DateTime? @default(now()) @map("measured_at")
  published   Boolean   @default(false)
  measurement String

  source   Source? @relation(fields: [sourceId], references: [id])
  sourceId String?

  unit   Unit?   @relation(fields: [unitId], references: [id])
  unitId String?

  type   Type?   @relation(fields: [typeId], references: [id])
  typeId String?

  sensor   Sensor? @relation(fields: [sensorId], references: [id])
  sensorId String?

  license   License? @relation(fields: [licenseId], references: [id])
  licenseId String?

  collections   Collections? @relation(fields: [collectionsId], references: [id])
  collectionsId String?
}

model Collections {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)

  name         String
  abbreviation String?
  description  String?
  slug         String  @unique
  url          String?



  measurements Measurements[]
  Source       Source?        @relation(fields: [sourceId], references: [id])
  sourceId     String?
  Type         Type?          @relation(fields: [typeId], references: [id])
  typeId       String?
}

model Source {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)

  name         String
  abbreviation String?
  description  String?
  slug         String  @unique
  url          String?

  measurements Measurements[]
  collections  Collections[]
  Sensor       Sensor?        @relation(fields: [sensorId], references: [id])
  sensorId     String?
}

model Type {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)

  name         String
  abbreviation String?
  description  String?
  slug         String  @unique
  url          String?

  measurements Measurements[]
  collections  Collections[]

}

model Unit {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)

  name         String
  abbreviation String?
  description  String?
  slug         String  @unique

  measurements Measurements[]
}

model License {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)

  name         String
  abbreviation String?
  description  String?
  slug         String  @unique
  url          String?

  measurements Measurements[]
}

model Sensor {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)

  name         String
  abbreviation String?
  description  String?
  slug         String? @unique
  url          String?

  measurements Measurements[]
  source       Source[]

}

